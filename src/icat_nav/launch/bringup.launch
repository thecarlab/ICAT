<launch>
    <arg name="use_gui" default="false"/>
    <arg name="use_rviz" default="false"/>
    <arg name="use_ekf" default="true"/>
    <arg name="nav_use_rotvel" default="false"/>
    <arg name="robot_type" value="$(env ROBOT_TYPE)" doc="robot_type [X1,X3,X3plus,R2,X7]"/>
    <!-- 仿真模型 -->
    <!-- Simulation model -->
    <group if="$(arg use_ekf)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder
            '$(find yahboomcar_description)/urdf/yahboomcar_R2.urdf.xacro'" if="$(eval arg('robot_type') == 'R2')"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"
            if="$(arg use_gui)"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"
            unless="$(arg use_gui)"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    </group>

   
    <!-- 底层驱动节点 -->
    <!-- Low-level driver node -->
    <arg name="vel_raw_topic" default="vel_raw"/>
    <arg name="imu_topic" default="imu/imu_raw"/>
    <arg name="mag_topic" default="velmag/mag_raw_raw"/>
    <node pkg="yahboomcar_bringup" type="Mcnamu_driver.py" name="driver_node" required="true" output="screen" if="$(eval arg('robot_type') == 'R2')">
        <param name="xlinear_speed_limit" type="double" value="1.0"/>
        <param name="ylinear_speed_limit" type="double" value="1.0"/>
        <param name="angular_speed_limit" type="double" value="5.0"/>
        <param name="imu_link" type="string" value="imu_link"/>
        <remap from="/pub_vel" to="$(arg vel_raw_topic)"/>
        <remap from="/pub_imu" to="$(arg imu_topic)"/>
        <remap from="/pub_mag" to="$(arg mag_topic)"/>
    </node>

    <!--若车型不匹配，启动警告节点-->
    <node pkg="yahboomcar_bringup" type="warning.py" name="warning" required="true" output="screen" unless="$(eval arg('robot_type') == 'R2')"/>

    <!-- 发布里程计数据 -->
    <!-- Publish odometer data -->
    <!-- <node pkg="yahboomcar_bringup" type="odom_tf.py" name="odometry_publisher" output="screen">
    </node> -->

    <!-- 过滤和融合imu数据 -->
    <!-- Filter and fuse imu data -->

    <!-- 扩展卡尔曼数据融合 -->
    <!-- Extended Kalman data fusion -->

    <!-- rviz -->
    <node pkg="rviz" type="rviz" name="odom_rviz" required="true"
          args="-d $(find yahboomcar_bringup)/rviz/odom.rviz" if="$(arg use_rviz)"/>
</launch>
